defmodule MessageX.Messaging do
  use GenServer

  alias MessageX.Chats.Handle
  alias MessageX.Chats.ContactCard

  alias MessageX.Chats
  alias MessageX.Contacts

  # Client

  def start_link(opts \\ []) when is_list(opts) do
    state = %{chats: [], contacts: []}
    GenServer.start_link(__MODULE__, state, opts)
  end

  def chats(pid \\ __MODULE__) do
    GenServer.call(pid, :chats)
  end

  def contacts(pid \\ __MODULE__) do
    GenServer.call(pid, :contacts)
  end

  def find_contact(pid \\ __MODULE__, handle) do
    GenServer.call(pid, {:find_contact, handle})
  end

  # Callbacks

  @impl true
  def init(_opts \\ []) do
    state = %{
      # chats: Chats.list_chats(),
      # contacts: Contacts.list_contact_cards()
      chats: [],
      contacts: []
    }

    {:ok, state}
  end

  @impl true
  def handle_call(:chats, _from, state) do
    {:reply, state.chats, state}
  end

  def handle_call(:contacts, _from, state) do
    {:reply, state.contacts, state}
  end

  def handle_call({:find_contact, id}, from, state) when is_binary(id) do
    handle_call({:find_contact, %Handle{rowid: id}}, from, state)
  end

  def handle_call({:find_contact, %Handle{rowid: "+15857278458"}}, _from, state) do
    contact = %{
      photos: [
        %{
          params: %{encoding: "BASE64", type: "JPEG"},
          type: "binary",
          value:
            "PHOTO;TYPE=JPEG;ENCODING=BASE64:"
        }
      ],
      addresses: [],
      cal_uris: [],
      emails: [],
      fullname: %{value: " Michael  Sitchenko ", params: %{}, type: "text"},
      impps: [],
      name: %{value: ["Sitchenko", "Michael", "", "", ""], params: %{}, type: "text"},
      phone_numbers: [
        %{
          value: "(585) 727-8458",
          params: %{type: ["HOME", "VOICE", "pref"]},
          type: "phone-number"
        }
      ],
      social_profiles: [],
      urls: [],
      x_abadr: [],
      initials: "MS",
      identifier_name: "Michael  Sitchenko",
      identifier_number: "(585) 727-8458",
      identifier_numbers: ["5857278458"]
    }

    {:reply, contact, state}
  end

  def handle_call({:find_contact, %Handle{} = handle}, _from, state) do
    contact =
      state.contacts
      |> Enum.find(fn contact ->
        # id = handle.uncanonicalized_id
        id = handle.id

        # IO.inspect([id, ContactCard.sanitize_phone_number(id)])
        # IO.inspect(contact.identifier_numbers)

        if is_binary(id) and
             ContactCard.sanitize_phone_number(id) in contact.identifier_numbers do
          true
        else
          # if is_binary(id) and ContactCard.sanitize_email(id) in contact.identifier_emails do
          #   true
          # else
          #   false
          # end
          false
        end
      end)

    {:reply, contact, state}
  end

  # @impl true
  # def handle_cast({:push, element}, state) do
  #   {:noreply, [element | state]}
  # end
end
